Data Access Object (DAO)
Data Transfer Object (DTO).

-------------------------------
DAO is a class that usually has operations like save, update, delete. Whereas the DTO is just an object that holds data.

Entity is class mapped to table. Dto is class mapped to "view" layer mostly. What needed to store is entity & which needed to 'show' on web page is DTO.
-------------------------------
The advantage of the DAO layer is that if you need to change the underlying persistence mechanism you only have to change the DAO layer, and not all the places in the domain logic where the DAO layer is used from.

The advantage of DTO layer is that it adds a good deal of flexibility to the service layer and subsequently to the design of the entire application
----------------------------------
Short answer:

    Entities may be part of a business domain. Thus, they can implement behavior and be applied to different use cases within the domain.

    DTOs are used only to transfer data from one process or context to another. 
	As such, they are without behavior - except for very basic and usually standardised storage and retrieval functions.

Long answer:

While the term "Data Transfer Object" (DTO) is defined quite unambiguously, the term "Entity" is interpreted differently in various contexts.

The most relevant interpretations of the term "Entity", in my opinion, are the following three:

    In the context of enterprise java and jpa:
    "An object that represents persistent data maintained in a database."

    In the context of "domain-driven-design" (by Eric Evans):
    "An object defined primarily by its identity, rather than its attributes."

    In the context of "clean architecture" (by Robert C. Martin):
    "An object that encapsulates enterprise-wide critical business rules."

The Jee- and Jpa-community sees entities primarily as objects mapped to a database table. This point of view is very close to the definition of a DTO - and that's where much of the confusion probably stems from.

----------------------------------------------
DAO is a class that usually has the CRUD operations like save, update, delete. DTO is just an object that holds data. It is JavaBean with instance variables and setter and getters.

The DTO is used to expose several values in a bean like fashion. This provides a light-weight mechanism to transfer values over a network or between different application tiers.
DTO will be passed as value object to DAO layer and DAO layer will use this object to persist data using its CRUD operation methods.

https://www.tutorialspoint.com/design_pattern/data_access_object_pattern.htm

---------------------------
What is Dao class in Java with example?
Data Access Object concrete class - This class implements above interface. This class is responsible to get data from a data source which 
can be database / xml or any other storage mechanism. Model Object or Value Object - This object is simple POJO containing get/set methods 
to store data retrieved using DAO class.


